User.java
package pro2;

import javax.xml.bind.annotation.XmlAccessType;

@Getter @Setter @NoArgsConstructor @AllArgsConstructor
@XmlRootElement(name="user")
@XmlAccessorType(XmlAccessType.FIELD)

public class User {
	private String Album;
	private Integer Year;
	private Integer US_peak_chart_psost;
	private Address address;

}

CsvTOJson.java
package pro2;

import java.util.Scanner;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.File;
import java.io.BufferedReader;
import java.io.BufferedInputStream;
import java.io.FileReader;

public class CsvTOJson {

	public static void main(String[] args) {
		
		//readCsvUsingScanner("C:\\Users\\gowda\\Documents\\pro2\\csvjson.csv");
		readCsvUsingBufferReader("C:\\Users\\gowda\\Documents\\pro2\\csvjson.csv");
	}
	
	private static void readScvUsingScanner(String filePath) {
		try {
		Scanner scanner = new Scanner(new File(filePath));
		while (scanner.hasNext()) {
			System.out.println("User data : " + scanner.next().toString());
		}
		scanner.close();
		}catch(FileNotFoundException e) {
			e.printStackTrace();
		}
	}
	public class User {
		private String Album;
		private Integer Year;
		private Integer US_peak_chart_psost;
		private Address address;

	}
	private static void readCsvUsingBufferReader(String filePath) {
		String line= "";
		String deleimeter = ",";
		try {
		BufferedReader reader = new BufferedReader(new FileReader(filePath));
		
		while ((line = reader.readLine()) !=null) {
			System.out.println("User data : " + line);
			
			String[] userData = line.split(deleimeter);
			
		//	User user =new User(userData[0], Integer.valueOf(userData[1]), Integer.valueOf(userData[2]), null);
			Users.add(new User(userData[0], Integer.valueOf(userData[1]), Integer.valueOf(userData[2]), null));
			
			//System.out.println("User json : " + new Gson().toJson(User) );
			System.out.println("User json : " + new GsonBuilder().setPrettyPrinting().create().toJson(users));
		}
		}catch(FileNotFoundException e) {
			e.printStackTrace();
		}catch (IOException e) {
			e.printStackTrace();
		}
		
	}
}


Approach-2
customer.java
package com.grokonez.convertcsv2json;

public class Customer {
	private String Albums;
	private int year;
	private int US_peak_chart_psost;
 
	public Customer() {
	}
 
	public Customer(String Albums, int year, int US_peak_chart_psost) {
		this.Albums = Albums;
		this.year = year;
		this.US_peak_chart_psost = US_peak_chart_psost;
	}
 
	public String getAlbums() {
		return Albums;
	}
 
	public void setAlbums(String Albums) {
		this.Albums = Albums;
	}
 
	public String getyear() {
		return year;
	}
 
	public void setyear(String year) {
		this.year = year;
	}
 
	public int getUS_peak_chart_psost() {
		return US_peak_chart_psost;
	}
 
	public void setUS_peak_chart_psost(int US_peak_chart_psost) {
		this.US_peak_chart_psost = US_peak_chart_psost;
	}
 
	@Override
	public String toString() {
		return "Customer [id=" + id + ", name=" + name + ", address=" + address + ", US_peak_chart_psost=" + US_peak_chart_psost + "]";
	}
 
}

csv2json.java
	package com.grokonez.pro2;

	import java.io.BufferedReader;
	import java.io.FileReader;
	import java.io.IOException;
	import java.util.ArrayList;
	import java.util.List;

	import org.apache.commons.csv.CSVFormat;
	import org.apache.commons.csv.CSVParser;
	import org.apache.commons.csv.CSVRecord;

	import com.fasterxml.jackson.core.JsonProcessingException;
	import com.fasterxml.jackson.databind.ObjectMapper;

	public class csv2json {
		
	    public static void main(String[] args) {
	    	List customers = readCsvFile("customers.csv");
	    	String jsonString = convertJavaObject2JsonString(customers);
	    	System.out.println(jsonString);
	    }

	    /**
	     * 
	     * Read CSV File into Memory
	     * @param filePath
	     * @return
	     */
	    private static List readCsvFile(String filePath) {
			BufferedReader fileReader = null;
			CSVParser csvParser = null;

			List customers = new ArrayList();
			
			try {
				fileReader = new BufferedReader(new FileReader(filePath));
				csvParser = new CSVParser(fileReader,
						CSVFormat.DEFAULT.withFirstRecordAsHeader().withIgnoreHeaderCase().withTrim());
	 
				Iterable csvRecords = csvParser.getRecords();
				
				for (CSVRecord csvRecord : csvRecords) {
					Customer customer = new Customer(
							csvRecord.get("Album"),
							csvRecord.get("Year"),
							csvRecord.get("US_peak_chart_psost") 
							);
					
					customers.add(customer);
				}
	 
			} catch (Exception e) {
				System.out.println("Reading CSV Error!");
				e.printStackTrace();
			} finally {
				try {
					fileReader.close();
					csvParser.close();
				} catch (IOException e) {
					System.out.println("Closing fileReader/csvParser Error!");
					e.printStackTrace();
				}
			}
			
			return customers;
		}
	 
	    /**
	     * 
	     * Convert Java Object to JSON String
	     * 
	     * @param customers
	     * @return
	     */
	    private static String convertJavaObject2JsonString(List customers) {
	    	ObjectMapper mapper = new ObjectMapper();
	    	String jsonString = "";
	    	
	    	try {
	    		jsonString = mapper.writeValueAsString(customers);
	    	} catch (JsonProcessingException e) {
	    		e.printStackTrace();
	    	}
	    	
	    	return jsonString; 
	    }
}




